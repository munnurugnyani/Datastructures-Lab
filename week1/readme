1.c program to add two complex numbers by pasing structures to a function

#include<stdio.h>
#include<stdlib.h>
typedef struct complex
{
    	int real,imag;
}complex;
complex add(complex c1,complex c2)
{
  	complex c3;
  	c3.real=c1.real+c2.real;
  	c3.imag=c1.imag+c2.imag; 
  	return c3;
}
complex sub(complex c1,complex c2)
{
  	complex c4;
  	c4.real=c1.real-c2.real;
  	c4.imag=c1.imag-c2.imag;
  	return c4;
}
complex mul(complex c1,complex c2)
{
  	complex c5;
  	c5.real=(c1.real*c2.real) - (c1.imag*c2.imag);
  	c5.imag=(c1.real*c2.imag) + (c1.imag*c2.real);
  	return c5;
}
int main()
{
    	struct complex c1,c2,c3,c4,c5;
    	scanf("%d%d",&c1.real,&c1.imag);
    	scanf("%d%d",&c2.real,&c2.imag);
    	c3=add(c1,c2);
    	c4=sub(c1,c2);
    	c5=mul(c1,c2);
    	printf("add=%d+i%d",c3.real,c3.imag);
    	printf("sub=%d+i%d",c4.real,c4.imag);
    	printf("mul=%d+i%d",c5.real,c5.imag);
    	return 0;
}
2.c program to store information of a student using structures
#include<stdio.h>
#include<stdlib.h>
struct student
{
    	char rollno[12];
    	char name[13];
    	int m1,m2,m3;
    	char grade;
}
int main()
{
  	struct student s1;
  	float avg;
  	             scanf("%s%s%d%d%d%f%s",&s.rollno,&s1.name,&s1.m1,&s1.m2,&s1.m3,&s1.avg,&s1.grade);
  	printf("rollno=%s\n",s1.rollno);
  	printf("name=%s\n",s1.name);
  	printf("avg=%f\n,(s1.m1+s1.m2+s1.m3)/3.0);
            if (avg>=20)
                      s1.grade=’A’;
           else
                      s1.grade=’B’;
           printf(“grade=%c\n”,s1.grade);
}
  3.Write a C program to node with data and link using self referential structures
        
#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node*link;
};
int main()
{
	struct node*s;
	s=(struct node*)malloc(sizeof(struct node));
	s->data = 10;
	s->link = NULL;
	printf("data=%d",s->data);
}
  	if(avg>20)
       	s1.grade='A';
  	else
       	s1.grade='B';
  	printf("grade=%c\n",s1.grade);
}
4.Write a C program to node with data and two link using self referential structures
#include<stdio.h>
#include<stdlib.h>
struct node
{
   int data;
   struct node*prev;
   struct node*next;
};
int main()
{
	struct node*s;
	s=(struct node*)malloc(sizeof(struct node));
	s->data = 10;
	s->prev = NULL;
	s->next = NULL;
	printf("data=d,s->dsts);
}


Hi WHAA,
As of now, you have a(n) F in the class.  This assignment is worth 15.00 points.  If you get more than 12.00 (80%) on this assignment, your class grade will increase to a(n) D.
